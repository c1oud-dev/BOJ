'''
학점을 계산하는데 총 10개의 평점이 있다. A+ 부터 D0까지.
총점은 중간고사(35%) + 기말고사(45%) + 과제(20%) 비율로 반영된다.
10개의 평점을 총점이 높은 순서대로 부여한다.(이게 본문제) 각각의 평점은 같은 비율로 부여할 수 있음.
학점을 알고싶은 K번째 학생의 번호가 주어졌을 때 K번째 학생의 학점을 출력해야 한다.
테스트케이스의 첫 번째 줄은 학생수 N과 학점을 알고싶은 학생의 수 K가 주어짐
테스트케이스의 두 번째 줄부터 각각의 학생이 받은 시험 및 과제 점수가 주어짐

풀이
1. 한 리스트에 평점을 다 저장함.
2. 시험 및 과제 비율도 있으니 100점 만점으로 환산하고 리스트에 넣는다.
3. 환산한 점수를 sort를 써서 정렬한 후에, for문을 써서 평점을 매긴다.
(근데 정렬하면 안 됨. 이러면 K번째를 알 수 없음. 스택 or 큐 자료구조를 쓰던지 아니면 dict를 쓰던지.)
pop(), insert(), remove() 등 내장함수인가 봄
4. 같은 평점이 나올 수도 있으니 점수가 이전 리스트값과 같은지 확인하고 같으면 같은 평점을 부여한다.
5. 평점 부여가 모두 끝났으면 리스트[k-1] 출력
'''
#22:45 - 00:10 (이후에 풀이 봄)

t = int(input())
grade = ["A+", "A0", "A-", "B+", "B0", "B-", "C+", "C0", "C-", "D0"]
def calc_score(mid, fin, assi):
    return (0.35*mid) + (0.45*fin) + (0.2*assi) #생각해봐야 할 점, 정수로 계산하느냐 소수점까지 계산하느냐

for i in range(1, t+1):
    n, k = map(int, input().split())
    store_score = [] #환산한 점수를 저장하기 위한 리스트
    for j in range(n): #학생들 점수 모두 입력받기
        mid, fin, assi = map(int, input().split()) #중간, 기말, 과제
        store_score.append((0.35*mid) + (0.45*fin) + (0.2*assi)) #계산한 총점을 리스트에 모두 저장

    k_score = store_score[k-1] #k번째 점수를 저장
    store_score.sort(reverse=True) #점수 리스트를 내림차순으로 정렬한다.

    value = n // 10 #문제에서 이게 주어짐 #n= 10일 때 1임 즉, 1명씩에게만 동일한 점수가 부여된다는 것
    ans = store_score.index(k_score) // value #점수 리스트에서 k번째의 점수의 인덱스를 저장한다.
    print("#"+str(i),grade[ans]) #등급 중 k번째 인덱스와 동일한 학점을 반환한다.
#첫 번째 제출 런타임 에러 Why 테스트 케이스 중 1개만 맞다. 반례 - 동일한 학점이 나올 수 있다는 코드를 안 넣음