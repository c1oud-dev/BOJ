# 16:50 - 18:43

from collections import deque

N, M = map(int, input().split())
graph = []
for _ in range(N):
    graph.append(list(map(int, input())))

def BFS(x, y):
    dx = [-1, 1, 0, 0] 
    dy = [0, 0, -1, 1]

    q = deque()
    q.append((x,y)) # x = 0, y = 0 -> deque([(0, 0)])

    while q:
        x, y = q.popleft() #x = 0, y = 0 -> (0, 0)

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or nx >= N or ny < 0 or ny >= M:
                continue

            if graph[nx][ny] == 1:
                graph[nx][ny] = graph[x][y] + 1 -> 이해 안 됨 
                q.append((nx, ny)) 

    return graph[N-1][M-1]

print(BFS(0, 0))


#회고
- N x M 배열은 상하좌우를 확인할 수 있는 코드를 넣어야 한다.
- 큐에 append하고 pop하는 것에 익숙해져야 한다.
