#02:40 - 03:16

import sys
input = sys.stdin.readline

from collections import deque

# 좌우상하
dx = [-1, 1, 0, 0]
dy = [0, 0, 1, -1]

def bfs(i, j):
    visited[i][j] = 1 #방문
    q = deque()
    q.append((i, j))
    homecnt = 1

    while q:
        x, y = q.popleft()

        for z in range(4):
            nx = dx[z] + x
            ny = dy[z] + y

            if -1 < nx < N and -1 < ny < N:
                if visited[nx][ny] == 0 and graph[nx][ny] == 1: #집이 있는데 방문하지 않았으면
                    visited[nx][ny] = 1
                    homecnt += 1
                    q.append((nx, ny))
    homeans.append(homecnt)

N = int(input())
graph = [list(map(int, input().rstrip())) for _ in range(N)]
visited = [[0]*N for _ in range(N)] #0은 방문하지 않은 상태
cnt = 0 #단지수
homeans = []
for i in range(N):
    for j in range(N):
        if visited[i][j] == 0 and graph[i][j] == 1:
            cnt += 1
            bfs(i, j)

print(cnt)
homeans.sort()
for i in homeans:
    print(i)
