#15:17 - 16:08 // 17:50 - 19:03

import sys
input = sys.stdin.readline

num = input().split('-')
ans = 0

for i in num[0].split('+'): #[1]을 하면 list index out of range 에러가 뜸 [0]이어야만 하는 이유는?
    ans += int(i)
for i in num[1:]:
    #print(i) #50+40이 출력
    for j in i.split('+'):
        ans -= int(j)

print(ans)

-------------------------------------------------------------------------
math_num = input().split('-') #문자열로 입력 받으면서 '-'를 기준으로 분리한다.
#만약 입력이 10+20-30+40-50이라고 하면,
 math_num에는 '-'를 기준으로 다시 저장되어 있으므로 math_num['10+20', '30+40', '50'] 이다.
 
ans = 0 #결과를 저장하기 위한 변수
for i in math_num[0].split('+'): #-가 나오기 전까지 +이면 더함, 또 '+'을 기준으로 숫자를 분리하면서 꺼냄
    ans += int(i) #문자열이기 때문에 정수형으로 변환해주고 결과값에 더한다.
for i in math_num[1:]: #위에서 더한 것들을 제외한 나머지 인덱스부터 끝까지
    for j in i.split('+'): #'+'를 기준으로 또 나눔
        ans -= int(j)
print(ans)



#참고한 것
- 문자열.split(' ') : ' '기준으로 분리

숫자 판별 : isdecimal(), isdigit(), isnumeric()
- isdecimal() : 문자열이 int형으로 변환 가능하면 True를 반환
- isdigit() : 어떤 문자열이 숫자의 형태이면 True
- isnumeric() : 숫자값 표현에 해당하는 문자열이면 True

문자열 판별 : isalpha()
- isalpha() : 주어진 문자열이 알파벳으로만 이루어져 있으면 True, 공백은 False를 반환

숫자 + 문자열 판별 : isalnum()
- isalnum() : 알파벳이나 숫자 둘 중에 하나로만 구성되어 있어도 True, 공백은 False를 반환

연속된 숫자들을 추출해서 list로 반환 : re.findall()



풀이 방법
+를 최대로 만들고 앞에 -가 붙으면 최솟값이 나온다. 따라서 '-'로 구분하면서 푼다.

-----------------------------------------------------------------------
#회고
시간이 굉장히 오래 걸렸다. 정수만 다루다가 문자열을 다루니 어려웠다.
문제를 어떤 방법으로 풀 건지는 알았지만 구현하는 데에 시간이 오래 걸렸고, 결국 다른 풀이를 보고 풀었다. 
문자열 문제는 싫어서 거르고 걸렀는데 이제는 풀어야 할 필요성을 느꼈다..
